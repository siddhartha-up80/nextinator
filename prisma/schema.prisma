// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Note {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationship to note chunks
  chunks NoteChunk[]

  @@map("notes")
}

model NoteChunk {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  noteId     String   @db.ObjectId
  content    String
  chunkIndex Int
  startIndex Int
  endIndex   Int
  vectorId   String   @unique // ID used in the vector database
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relationship to the parent note
  note Note @relation(fields: [noteId], references: [id], onDelete: Cascade)

  @@unique([noteId, chunkIndex])
  @@map("note_chunks")
}

model ChatSession {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  userId     String
  isShared   Boolean  @default(false)
  shareToken String?  @unique // Unique token for sharing
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relationship to chat messages
  messages ChatMessage[]

  @@map("chat_sessions")
}

model ChatMessage {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  chatSessionId String   @db.ObjectId
  role          String // "user" or "assistant"
  content       String
  createdAt     DateTime @default(now())

  // Relationship to the parent chat session
  chatSession ChatSession @relation(fields: [chatSessionId], references: [id], onDelete: Cascade)

  @@map("chat_messages")
}
